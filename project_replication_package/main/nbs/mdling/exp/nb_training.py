
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/training.ipynb

import sys

sys.path.append("../..")
from src.prep.exp.nb_prep import *
from src.proc.exp.nb_proc import *
from fastai.text import *

import pandas as pd

import warnings
warnings.filterwarnings('ignore')

def merge_cols(df):
    merged = ['<qa>'.join(x) for x in zip(df["query"], df["res"])]
    new_df = pd.DataFrame({"merge": merged})

    return new_df

def gen_lm_data(df, data_path):
    df = merge_cols(df)
    data = (TextList
            .from_df(df, data_path,
                     processor = SPProcessor(
                         sp_model = data_path/"merged/model.model",
                         sp_vocab = data_path/"merged/model.vocab"
                     ))
            .split_by_rand_pct()
            .label_for_lm()
            .databunch(bs=128)
           )

    return data

#     data_lm = (TextList.from_folder(path, extensions={".java"},
#                                 processor = [OpenFileProcessor(),
#                                              SPProcessor(lang="en")])
#            #Inputs: all the text files in path
#             .filter_by_folder(include=['sm_train', 'sm_valid', 'sm_test'])
# #            #We may have other temp folders that contain text files so we only keep what's in train and test
#             .split_by_folder(valid='sm_valid', train='sm_train')
#            #We randomly split and keep 10% (10,000 reviews) for validation
#             .label_for_lm()
#            #We want to do a language model so we label accordingly
#             .databunch(bs=bs))